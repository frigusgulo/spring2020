library(spatstat)
data("chorley")
range(chorley$x)
range(chorley$y)
incin <- chorley.extra$incin
incin$x
max(chorley$x)
incin$y
window <- as.owin(320,370,400,440)
window <- as.owin((320,370,400,440))
window <- as.owin((320 370 400 440))
window <- as.owin(c(320, 370, 400, 440))
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
csr <- rpoispp(win=window,nsim=100)
csr <- rpoispp(lambda=1,win=window,nsim=100)
View(csr)
View(csr[1])
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(320, 370, 400, 440))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
means[i] <- mean(sqrt((csr[i]$x - incin$x)^2 + (csr[i]$y - incin$y)^2)) # calculate average distance to incinerator
}
permtest_perc <- 100*(count(means[means <= mean_diff])/length(means))
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(320, 370, 400, 440))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
means[i] <- mean(sqrt((csr[i]$x - incin$x)^2 + (csr[i]$y - incin$y)^2)) # calculate average distance to incinerator
}
permtest_perc <- 100*(length(means[means <= mean_diff])/length(means))
means <- table(means)
permtest_perc <- 100*(length(means[means <= mean_diff])/length(means))
permtest_perc <- 100*(length(means[means > mean_diff])/length(means))
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(320, 370, 400, 440))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
means[i] <- mean(sqrt((csr[i]$x - incin$x)^2 + (csr[i]$y - incin$y)^2)) # calculate average distance to incinerator
}
permtest_perc <- 100*(length(means[means > mean_diff])/length(means))
for (i in 1:samples){
means[i] <- mean(sqrt((csr[i]$x - incin$x)^2 + (csr[i]$y - incin$y)^2)) # calculate average distance to incinerator
}
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(320, 370, 400, 440))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
#means <- integer(samples)
for (i in 1:samples){
means[i] <- mean(sqrt((csr[i]$x - incin$x)^2 + (csr[i]$y - incin$y)^2)) # calculate average distance to incinerator
}
permtest_perc <- 100*(length(means[means > mean_diff])/length(means))
# Chorley Cancer
library(spatstat)
data("chorley")
incin <- chorley.extra$incin
larynx_perc <- 100*(sum(chorley$marks == "larynx")/(sum(chorley$marks=="larynx") + sum(chorley$marks=="lung")))
lung_perc <- 100 - larynx_perc
quadrat.test(chorley[chorley$marks == "larynx"], nx=5, ny=5,
alternative=c( "clustered"),
method=c("MonteCarlo"),
conditional=TRUE, CR=1,
nsim=1999)
quadrat.test(chorley[chorley$marks == "lung"], nx=5, ny=5,
alternative=c( "clustered"),
method=c("MonteCarlo"),
conditional=TRUE, CR=1,
nsim=1999)
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(320, 370, 400, 440))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
#means <- integer(samples)
for (i in 1:samples){
means[i] <- mean(sqrt((csr[i]$x - incin$x)^2 + (csr[i]$y - incin$y)^2)) # calculate average distance to incinerator
}
permtest_perc <- 100*(length(means[means > mean_diff])/length(means))
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
means[i] <- mean(sqrt((csr[i]$x - incin$x)^2 + (csr[i]$y - incin$y)^2)) # calculate average distance to incinerator
}
permtest_perc <- 100*(length(means[means > mean_diff])/length(means))
View(means)
means <- integer(samples)
for (i in 1:samples){
val <- mean(sqrt((csr[i]$x - incin$x)^2 + (csr[i]$y - incin$y)^2))
print(val)
means[i] <- val
}
permtest_perc <- 100*(length(means[means > mean_diff])/length(means))
clear
View(csr[1]$x - incin$x)
csr[1]
csr[1]$x
csr[1][["Simulation 1"]][["x"]]
csr[5]
csr_ <- df(csr)
csr_ <- df1(csr)
csr_ <- df(csr)
csr[5]
csr["Simulation 5"]
csr["Simulation 5"]$x
means <- integer(samples)
for (i in 1:samples){
ind <- c("Simulation ",i)
toString(ind)
val <- mean(sqrt((csr[i][ind]$x - incin$x)^2 + (csr[i][ind]$y - incin$y)^2))
print(val)
means[i] <- val
}
permtest_perc <- 100*(length(means[means > mean_diff])/length(means))
for (i in 1:samples){
ind <- c("Simulation ",i)
toString(ind)
print(csr[i][ind]$x)
val <- mean(sqrt((csr[i][ind]$x - incin$x)^2 + (csr[i][ind]$y - incin$y)^2))
print(val)
means[i] <- val
}
for (i in 1:samples){
ind <- c("Simulation ",i)
toString(ind)
print(ind)
print(csr[i][ind]$x)
val <- mean(sqrt((csr[i][ind]$x - incin$x)^2 + (csr[i][ind]$y - incin$y)^2))
print(val)
means[i] <- val
}
for (i in 1:samples){
ind <- c("Simulation",i)
toString(ind)
paste(ind,sep=" ")
print(ind)
print(csr[i][ind]$x)
val <- mean(sqrt((csr[i][ind]$x - incin$x)^2 + (csr[i][ind]$y - incin$y)^2))
print(val)
means[i] <- val
}
for (i in 1:samples){
ind <- c("Simulation",i)
toString(ind)
ind = paste(ind,sep=" ")
print(ind)
print(csr[i][ind]$x)
val <- mean(sqrt((csr[i][ind]$x - incin$x)^2 + (csr[i][ind]$y - incin$y)^2))
print(val)
means[i] <- val
}
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
print(ind)
print(csr[i][ind]$x)
val <- mean(sqrt((csr[i][ind]$x - incin$x)^2 + (csr[i][ind]$y - incin$y)^2))
print(val)
means[i] <- val
}
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
print(ind)
print(csr[i][ind]$x)
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
print(val)
means[i] <- val
}
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
print(val)
means[i] <- val
}
permtest_perc <- 100*(length(means[means > mean_diff])/length(means))
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
means[i] <- val
}
range(chorley$x)
range(chorley$y)
probs_close = pnorm(mean_diff, mean=mean(means),sd=sd(means),lower.tail=TRUE)
probs_close = pnorm(mean_diff, mean=mean(means),sd=sd(means))
mean(means)
sd=sd(means)
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(346.6, 364.1, 412.6, 430.3))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
means[i] <- val
}
probs_close = pnorm(mean_diff, mean=mean(means),sd=sd(means))
probs_close = pnorm(mean_diff, mean=mean(means),sd=sd(means),lower.tail=FALSE)
library(spatstat)
data("chorley")
incin <- chorley.extra$incin
larynx_perc <- 100*(sum(chorley$marks == "larynx")/(sum(chorley$marks=="larynx") + sum(chorley$marks=="lung")))
lung_perc <- 100 - larynx_perc
quadrat.test(chorley[chorley$marks == "larynx"], nx=5, ny=5,
alternative=c( "clustered"),
method=c("MonteCarlo"),
conditional=TRUE, CR=1,
nsim=1999)
quadrat.test(chorley[chorley$marks == "lung"], nx=5, ny=5,
alternative=c( "clustered"),
method=c("MonteCarlo"),
conditional=TRUE, CR=1,
nsim=1999)
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(346.6, 364.1, 412.6, 430.3))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
means[i] <- val
}
probs_close = pnorm(mean_diff, mean=mean(means),sd=sd(means),lower.tail=FALSE)
chorley.extra$plotit()
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(330, 370, 405, 440))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
means[i] <- val
}
probs_close = pnorm(mean_diff, mean=mean(means),sd=sd(means),lower.tail=FALSE)
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(330, 370, 405, 440))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
means[i] <- val
}
probs_close = pnorm(mean_diff, mean=mean(means),sd=sd(means),lower.tail=TRUE)
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(346.6, 364.1, 412.6, 430.3))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
means[i] <- val
}
probs_close = pnorm(mean_diff, mean=mean(means),sd=sd(means),lower.tail=FALSE)
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(346.6, 364.1, 412.6, 430.3))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
means[i] <- val
}
probs_close = pnorm(mean_diff, me
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(340, 370.1, 412.6, 430.3))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
means[i] <- val
}
probs_close = pnorm(mean_diff, mean=mean(means),sd=sd(means),lower.tail=TRUE)
mean(means)
sd(means)
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(345, 366, 412.6, 430.3))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
means[i] <- val
}
probs_close = pnorm(mean_diff, mean=mean(means),sd=sd(means),lower.tail=TRUE)
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(346.6, 364.1, 412.6, 430.3))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
means[i] <- val
}
probs_close = pnorm(mean_diff, mean=mean(means),sd=sd(means),lower.tail=TRUE)
mean_diff <- mean(sqrt((chorley$x - incin$x)^2 + (chorley$y - incin$y)^2)) # calculate average distance to incinerator
window <- as.owin(c(346.6, 364.1, 412.6, 430.3))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
means[i] <- val
}
probs_close = pnorm(mean_diff, mean=mean(means),sd=sd(means),lower.tail=TRUE)
window <- as.owin(c(346.6, 364.1, 412.6, 430.3))
samples <- 100
csr <- rpoispp(lambda=1,win=window,nsim=samples)
means <- integer(samples)
for (i in 1:samples){
ind = paste("Simulation",i,sep=" ")
val <- mean(sqrt((csr[[ind]][["x"]] - incin$x)^2 + (csr[[ind]][["y"]] - incin$y)^2))
means[i] <- val
}
probs_close = pnorm(mean_diff, mean=mean(means),sd=sd(means),lower.tail=TRUE)
mean(means)
